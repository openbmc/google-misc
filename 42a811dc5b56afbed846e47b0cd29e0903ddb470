{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a8e28944_3d327cb4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2023-07-10T23:05:51Z",
      "side": 1,
      "message": "I guess - would it make sense to rename this to be more generic since other platforms for other usage may be able utilize this to disable espi? (in that case, we should probably take out the service that heavily associates this with bare metal service)",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 15
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f05d9f20_e6439f44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2023-07-10T23:39:04Z",
      "side": 1,
      "message": "In addition to this executable, I also need to introduce another service to monitor the Post Complete GPIO, to enable/disable eSPI when appropriate. I was planning to put that in the same bare-metal-espi directory. Are recommending I create an additional subdirectory in google-misc for that?",
      "parentUuid": "a8e28944_3d327cb4",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 15
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c98e971_688e3c9f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2023-07-11T00:00:00Z",
      "side": 1,
      "message": "If both are generic executables, could we perhaps consolidate / use them as we see fit in the meta-google layer change instead for the BM case?",
      "parentUuid": "f05d9f20_e6439f44",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 15
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c5a2f5e_74ab996a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2023-07-11T20:10:08Z",
      "side": 1,
      "message": "We can probably do that at least for this espi-control executable.\n\nThe other post complete monitor daemon seems more specialized for the bare metal use case, since it\u0027s monitoring when the host is trusted vs. untrusted. I intend for this daemon to stop the bare-metal-active systemd target when the post complete GPIO gets deasserted.\n\nIn summary, these are all the components I need to implement:\n- new IPMI command in google-ipmi-sys, introduced here: https://gerrit.openbmc.org/c/openbmc/google-ipmi-sys/+/64689\n- Create a recipe in meta-google with the bare-metal-active systemd target (this is currently part of the new IPMI command commit, but it might make sense to pull this into a separate recipe, since the post complete monitor also needs this).\n- espi-control executable, introduced in this commit. This commit won\u0027t have a systemd service.\n- Create a new bare-metal-espi recipe in meta-google, which adds a systemd service for espi-control (instead of doing that in this CL).\n- Create a post-complete-monitor daemon, which will live in google-misc, as well. This commit will include a systemd service, since the daemon needs to start at boot. This daemon will stop the bare-metal-active systemd target when post complete is deasserted.\n\nIs this sort of what you have in mind?",
      "parentUuid": "6c98e971_688e3c9f",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 15
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da5da08c_39b5dff4",
        "filename": "subprojects/bare-metal-espi/meson.build",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-07-11T00:23:57Z",
      "side": 1,
      "message": "0.63.0",
      "range": {
        "startLine": 5,
        "startChar": 20,
        "endLine": 5,
        "endChar": 26
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9904c5a_a433bfe0",
        "filename": "subprojects/bare-metal-espi/meson.build",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2023-07-11T00:53:47Z",
      "side": 1,
      "message": "It matches the top level right now",
      "parentUuid": "da5da08c_39b5dff4",
      "range": {
        "startLine": 5,
        "startChar": 20,
        "endLine": 5,
        "endChar": 26
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b825d538_5be55112",
        "filename": "subprojects/bare-metal-espi/meson.build",
        "patchSetId": 3
      },
      "lineNbr": 5,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2023-07-11T23:47:23Z",
      "side": 1,
      "message": "Yeah, I chose that version because it\u0027s in the top level build file.",
      "parentUuid": "c9904c5a_a433bfe0",
      "range": {
        "startLine": 5,
        "startChar": 20,
        "endLine": 5,
        "endChar": 26
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03958a24_aec19ef7",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-07-11T00:23:57Z",
      "side": 1,
      "message": "`static_cast\u003cuintptr_t\u003e`",
      "range": {
        "startLine": 87,
        "startChar": 23,
        "endLine": 87,
        "endChar": 34
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "585df860_457e7468",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2023-07-11T23:47:23Z",
      "side": 1,
      "message": "I needed to use reinterpret_cast here, but I changed it.",
      "parentUuid": "03958a24_aec19ef7",
      "range": {
        "startLine": 87,
        "startChar": 23,
        "endLine": 87,
        "endChar": 34
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff9dc188_6f5d640c",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-07-11T00:23:57Z",
      "side": 1,
      "message": "`reinterpret_cast\u003cvolatile uint32_t*\u003e`",
      "range": {
        "startLine": 91,
        "startChar": 11,
        "endLine": 91,
        "endChar": 31
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bd9394d_2610cef5",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2023-07-11T23:47:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff9dc188_6f5d640c",
      "range": {
        "startLine": 91,
        "startChar": 11,
        "endLine": 91,
        "endChar": 31
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0cdfc76_707227d2",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2023-07-11T00:57:43Z",
      "side": 1,
      "message": "I would wrap all of this logic in a sub function so you can wrap all of it in a larger try { } catch { } block for when the fd operations throw.",
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b44ed264_53a5bffd",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 113,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2023-07-11T23:47:23Z",
      "side": 1,
      "message": "I moved all the register reads and writes into a separate function.",
      "parentUuid": "f0cdfc76_707227d2",
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7193ee19_1900f010",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2023-07-11T00:57:43Z",
      "side": 1,
      "message": "Don\u0027t save it as an xvalue reference. Just prefer auto really.",
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da45f102_1fc492f8",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2023-07-11T23:47:23Z",
      "side": 1,
      "message": "Done. I changed it to auto.",
      "parentUuid": "7193ee19_1900f010",
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcd0c332_128db366",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-07-11T00:23:57Z",
      "side": 1,
      "message": "do we need delays in between setting the registers? Does the sequence always work?",
      "range": {
        "startLine": 185,
        "startChar": 12,
        "endLine": 194,
        "endChar": 35
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "560c40ab_291def31",
        "filename": "subprojects/bare-metal-espi/npcm7xx_espi_control.cpp",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 1001202
      },
      "writtenOn": "2023-07-11T23:47:23Z",
      "side": 1,
      "message": "I don\u0027t think there\u0027s any timing requirement for a delay. I haven\u0027t had any problems with this sequence.",
      "parentUuid": "bcd0c332_128db366",
      "range": {
        "startLine": 185,
        "startChar": 12,
        "endLine": 194,
        "endChar": 35
      },
      "revId": "42a811dc5b56afbed846e47b0cd29e0903ddb470",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}