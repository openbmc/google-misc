{
  "comments": [
    {
      "key": {
        "uuid": "bd6f74e2_a5e67aee",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 43,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-09-30T21:29:36Z",
      "side": 1,
      "message": "We should avoid storing extra copies of the firmware in memory where possible. AFAIK you should be able to read regions of the file as needed to do the hashing required to verify the descriptor.\n\nAlso, even if you do opt to store the firmware in memory we shouldn\u0027t store it in a global variable like this. It should be something you can pass around where it is used and only live as long as needed.",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc6eec02_4ac175c5",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 43,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-01T04:21:26Z",
      "side": 1,
      "message": "this is done for the readFromBuf to use it in libcr51.\n\nI ran into some issue when trying to remove it from global variable. I\u0027ll try to clean it up again.\n\nI was trying to pub the buffer in a class along with the functions below like readFromBuf().\nI was having trouble converting that in function pointer in \n\n```\nintf.read\n```",
      "parentUuid": "bd6f74e2_a5e67aee",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d571113_65e5590c",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 43,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-20T02:08:44Z",
      "side": 1,
      "message": "Done. did some weird stuff to get lambda with capture variable to convert to function pointer.",
      "parentUuid": "bc6eec02_4ac175c5",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c110072f_f3d3c34d",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-09-30T21:29:36Z",
      "side": 1,
      "message": "You might consider leveraging the flasher library for this, then you can translate the file / device strings directly into a readable unit. I can provide a common class for reading contents.\n\nAlso, you shouldn\u0027t use a string_view for nul-terminated strings. You would have to use a const char * in this case.",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2083e312_fb8856bb",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-01T04:21:26Z",
      "side": 1,
      "message": "I guess we can just delete this function if that\u0027s the cause.\n\nWe can pass in the buffer to here after we read the data in the flasher.\n\nI am afraid that how libcr51 is setup might block it like requiring the buffer to be global and accessible to all functions.",
      "parentUuid": "c110072f_f3d3c34d",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be9d8a72_e3e88bd3",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-21T16:35:36Z",
      "side": 1,
      "message": "We will have to do this after the flasher is upstream. Will close this for now.",
      "parentUuid": "2083e312_fb8856bb",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7be83edf_2aed1dce",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 107,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-09-30T21:29:36Z",
      "side": 1,
      "message": "I think you need to read the descriptor to figure out which type of hash was used.",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "434514c9_d09d2b53",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 107,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-01T04:21:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7be83edf_2aed1dce",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6a33d0c_67a8c975",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 151,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-09-30T21:29:36Z",
      "side": 1,
      "message": "If you are validating an image you need to make sure it is also verifying the non-static regions too to guarantee the image is pristine. I don\u0027t think the regular verify routine does this.",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d226ff0_51df933e",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 151,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-01T04:21:26Z",
      "side": 1,
      "message": "yeah, I think so. Looks like it in\n\nhttps://github.com/openbmc/google-misc/blob/master/subprojects/libcr51sign/libcr51sign.c#L417-L420\n\num... I am not exactly sure how we can validate the non-static regions. In libcr51sign, it got all the static regions and hash them. The hash is used to compare with some expected values.\n\nWith non-static regions, we can\u0027t do that.",
      "parentUuid": "b6a33d0c_67a8c975",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca2bae81_790b8dc8",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 151,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-08T21:01:01Z",
      "side": 1,
      "message": "Is validating the non-static region just checking to see if the non-static regions are all zero after flashing it? Checking the for regions that doesn\u0027t have IMAGE_REGION_STATIC or PERSISTENT, since the persistent regions won\u0027t be zero.\n\nnon-static regions will be zeroed.\n\npersistent -\u003e stay around during update.\n\nnon-persistent -\u003e don\u0027t care.\n\nstatic -\u003e read only/code logic",
      "parentUuid": "6d226ff0_51df933e",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f128a3ac_fcffa760",
        "filename": "subprojects/libcr51sign/cr51sign_validator.cpp",
        "patchSetId": 10
      },
      "lineNbr": 151,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-19T23:58:28Z",
      "side": 1,
      "message": "Had some discussion offline and concluded that this is a TODO for later.\n\nSome requirement before we can enable validation of non-static regions.\n- Signed all regions of the image including the non-static to create the hashes\n- Make sure that the new signed image does not break existing validation checks\n\nThe make sure that the non-static images which might include important stuff does not change before it is installed.\n\nWe will validate the image the same same way by checking the hash of the non-static regions.",
      "parentUuid": "ca2bae81_790b8dc8",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cc52e37_e807015e",
        "filename": "subprojects/libcr51sign/meson.build",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-09-30T21:29:36Z",
      "side": 1,
      "message": "These should be configuration changes, not build time code changes.",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1041d27a_47eb143f",
        "filename": "subprojects/libcr51sign/meson.build",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-01T04:21:26Z",
      "side": 1,
      "message": "I have removed it now.\n\nWe don\u0027t need to do anything here, right? If it should be setup during configuration.",
      "parentUuid": "2cc52e37_e807015e",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f882e078_56362cb1",
        "filename": "subprojects/libcr51sign/meson.build",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-20T02:08:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1041d27a_47eb143f",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e590d407_1ac1d0fd",
        "filename": "subprojects/ncsid/src/update_ra_neighbor.sh",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000188
      },
      "writtenOn": "2021-09-30T21:29:36Z",
      "side": 1,
      "message": "Can we drop this from the change, I\u0027ll go fix it separately since I added it.",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7ceabf3_09259417",
        "filename": "subprojects/ncsid/src/update_ra_neighbor.sh",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-01T04:21:26Z",
      "side": 1,
      "message": "oops. yeah.\n\nLet me remove this one.",
      "parentUuid": "e590d407_1ac1d0fd",
      "revId": "28d7f1397a6b1ba94dde8b596666f23d12f681a7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}