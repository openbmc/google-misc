description: >
  Implement the Hoth command control interface.

methods:
  - name: SendHostCommand
    description: >
      Send a host command to Hoth and return the response.
      This will block on Hoth completing its internal operations.
      Critical host commands like LoadTokens are banned.
      This method should be called from the IPMI HostCommand passthrough.
    parameters:
      - name: Command
        type: array[byte]
        description: >
          Data to write to Hoth SPI host command offset.
    returns:
      - name: Response
        type: array[byte]
        description: >
          Data read from Hoth SPI host command offset.
    errors:
      - self.Error.CommandFailure
      - self.Error.ResponseFailure
      - self.Error.InterfaceError
      - xyz.openbmc_project.Common.Error.Timeout

  - name: SendTrustedHostCommand
    description: >
      Send a host command to Hoth and return the response.
      This will block on Hoth completing its internal operations.
      Critical host commands like LoadTokens are allowed.
      This method should be called from the BMC.
    parameters:
      - name: Command
        type: array[byte]
        description: >
          Data to write to Hoth SPI host command offset.
    returns:
      - name: Response
        type: array[byte]
        description: >
          Data read from Hoth SPI host command offset.
    errors:
      - self.Error.CommandFailure
      - self.Error.ResponseFailure
      - self.Error.InterfaceError
      - xyz.openbmc_project.Common.Error.Timeout

  - name: UpdateFirmware
    description: >
      Write given firmware data to the Hoth firmware partition in EEPROM.
    parameters:
      - name: FirmwareData
        type: array[byte]
        description: >
          Hoth firmware image
    errors:
      - self.Error.FirmwareFailure

  - name: GetFirmwareUpdateStatus
    description: >
      Get the status of the firmware update process.
    returns:
      - name: Status
        type: enum[self.FirmwareUpdateStatus]
        description: >
          Status of the firmware update

  - name: ErasePayload
    description: >
      Erases the given size starting at the specified offset of the staging
      partition.
    parameters:
      - name: Offset
        type: uint32
        description: >
          Offset of the staging partition to start erasing from.
      - name: Size
        type: uint32
        description: >
          Size of the staging partition to erase.
    errors:
      - self.Error.CommandFailure
      - self.Error.ResponseFailure
      - self.Error.InterfaceError

  - name: SendPayload
    description: >
      Chunk and send the binary specified in the image path
    parameters:
      - name: ImagePath
        type: string
        description: >
          Firmware image path
    errors:
      - self.Error.FirmwareFailure
      - self.Error.InterfaceError

  - name: GetSendPayloadStatus
    description: >
      Get the status of the send payload process.
    returns:
      - name: Status
        type: enum[self.FirmwareUpdateStatus]
        description: >
          Status of the send payload process.

  - name: VerifyPayload
    description: >
      Initiates the verification process without activating the staging area
    errors:
      - self.Error.InterfaceError

  - name: GetVerifyPayloadStatus
    description: >
      Get the status of the payload verification process.
    returns:
      - name: Status
        type: enum[self.FirmwareUpdateStatus]
        description: >
          Status of the payload verification

  - name: ActivatePayload
    description: >
      Activates the staging area as persistent or non-persistent for next boot
      if verification was successful.
    parameters:
      - name: MakePersistent
        type: boolean
        description: >
          Flag to determine whether to activate the staged image as persistent
          or non-persistent for next boot.
    errors:
      - self.Error.CommandFailure
      - self.Error.ResponseFailure
      - self.Error.InterfaceError

  - name: GetPayloadSize
    description: >
      Determines the max size of the payload region.
    returns:
      - name: Size
        type: uint32
        description: >
          The size of the payload region
    errors:
      - self.Error.CommandFailure
      - self.Error.ResponseFailure
      - self.Error.InterfaceError

  - name: Confirm
    description: >
      Prevents haven from rolling back and using the previous image.
      When an image can be comfirmed to be working well, this command is given,
      which disarms the haven watchdog.
    errors:
      - self.Error.CommandFailure
      - self.Error.ResponseFailure
      - self.Error.InterfaceError

enumerations:
   - name: FirmwareUpdateStatus
     description: >
       The status of a firmware update
     values:
       - name: 'None'
         description: >
           No update initiated
       - name: 'InProgress'
         description: >
           Update still in progress
       - name: 'Error'
         description: >
           Update has failed
       - name: 'Done'
         description: >
           Update has completed successfully
